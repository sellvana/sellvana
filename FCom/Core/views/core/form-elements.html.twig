{#
INITIALIZATION:

{% set fieldData = { model:model, validator:validator, id_prefix:'model', name_prefix:'model', get_prefix:'config/prefix' } %}
{% include THIS.view('core/form-elements').twigName() as forms %}

EXAMPLES:

{{ forms.input(fieldData, {field:'name', label:'Label'|_, required:1}) }}

Using custom id/name:

{{ forms.input({label:'Label'|_, name:'form[name]', id:'html-id', value:fieldValue, placeholder:'Blah'|_, required:1 }) }}
{{ forms.select({label:'Label'|_, name:'form[name]', id:'html-id', options:model.fieldOptions('field'), value:validator.fieldValue('field'), required:1}) }}

#}

{% macro label(p1, p2) %}
    {% set view = LAYOUT.view('core/form-elements') %}
    {% set p = view.merge(p1, p2) %}
    <label class="control-label {{ p.label_class|default('col-md-2') }} {{ p.required ? 'required' }}"
        for="{{ view.getInputId(p) }}">{{ p.label }}</label>
{% endmacro %}

{% macro input(p1, p2) %}
    {% set view = LAYOUT.view('core/form-elements') %}
    {% set p = view.merge(p1, p2) %}
    {% import _self as forms %}
    <div class="form-group {{ p.form_group_class }}">
        {{ forms.label(p) }}
        <div class="{{ p.input_div_class|default('col-md-5') }}">
            <input type="{{ p.type|default('text') }}"
                id="{{ view.getInputId(p) }}"
                name="{{ view.getInputName(p) }}"
                class="form-control {{ p.input_class }} {{ p.required ? 'required' }}"
                style="{{ p.style }}"
                value="{{ view.getInputValue(p) }}"
                placeholder="{{ p.placeholder }}"
                {{ p.autocomplete ? 'autocomplete="' ~ p.autocomplete ~ '"' }}
                {{ p.readonly ? 'readonly' }}
                {{ p.required ? 'data-rule-required="true"' }}
                {{ p.attr | raw }}
            />
        </div>
    </div>
{% endmacro %}

{% macro select(p1, p2) %}
    {% set view = LAYOUT.view('core/form-elements') %}
    {% set p = view.merge(p1, p2) %}
    {% import _self as forms %}
    <div class="form-group {{ p.form_group_class }}">
        {{ forms.label(p) }}
        <div class="{{ p.input_div_class|default('col-md-5') }}">
            <select
                id="{{ view.getInputId(p) }}"
                name="{{ view.getInputName(p) }}"
                class="form-control {{ p.input_class }} {{ p.required ? 'required' }}"
                style="{{ p.style }}"
                {{ p.readonly ? 'readonly' }}
                {{ p.required ? 'data-rule-required="true"' }}
                {{ p.attr | raw }}
                {{ p.multiple ? 'multiple'}}
            >
                {{ UTIL.optionsHtml(p.options, view.getInputValue(p)) | raw }}
            </select>
        </div>
    </div>
    {% if p.select2 is defined %}
        <script>
            require(['jquery', 'select2'], function($) {
                $('#{{ view.getInputId(p) }}').select2({{ p.select2 is iterable ? UTIL.toJson(p.select2) : '{}' }});
            })
        </script>
    {% endif %}
{% endmacro %}

{% macro boolean(p1, p2) %}
    {% set view = LAYOUT.view('core/form-elements') %}
    {% set p = view.merge(p1, {options: { 0: 'no'|_, 1: 'YES'|_ }, style:'width:auto' }) %}
    {% set p = view.merge(p, p2) %}
    {% import _self as forms %}
    {{ forms.select(p) }}
{% endmacro %}

{#
    <div class="form-group">
        <label class="col-md-2 control-label" for="model-hide-product">{{ 'Hide Product'|_ }}</label>
        <div class="col-md-5">
            <input type="hidden" name="model[is_hidden]" value="0" />
            <input id="model-hide-product" class="switch-cbx" name="model[is_hidden]" {% if validator.fieldValue('is_hidden') == 1 %}checked="checked"{% endif %} value='1' type='checkbox' />
        </div>
    </div>
#}

{% macro textarea(p1, p2) %}
    {% set view = LAYOUT.view('core/form-elements') %}
    {% set p = view.merge(p1, p2) %}
    {% set value = view.getInputValue(p) %}
    {% import _self as forms %}
    <div class="form-group {{ p.form_group_class }}">
        {{ forms.label(p) }}
        <div class="{{ p.input_div_class|default('col-md-5') }}">
            <textarea rows="{{ p.rows|default(5) }}"
                id="{{ view.getInputId(p) }}"
                name="{{ view.getInputName(p) }}"
                class="form-control {{ p.input_class }} {{ p.required ? 'required' }}"
                style="{{ p.style }}"
                placeholder="{{ p.placeholder }}"
                {{ p.readonly ? 'readonly' }}
                {{ p.required ? 'data-rule-required="true"' }}
                {{ p.attr | raw }}
           >{{ p.raw ? value|raw : value }}</textarea>
        </div>
    </div>
{% endmacro %}

{% macro wysiwyg(p1, p2) %}
    {% set view = LAYOUT.view('core/form-elements') %}
    {% set p = view.merge(p1, p2) %}
    {% set value = view.getInputValue(p) %}
    {% import _self as forms %}
    <div class="form-group {{ p.form_group_class }}">
        {{ forms.label(p) }}
        <div class="{{ p.input_div_class|default('col-md-5') }}">
            <textarea rows="{{ p.rows|default(5) }}"
                class="form-control ckeditor js-desc-wysiwyg {{ p.input_class }}"
                id="{{ view.getInputId(p) }}"
                name="{{ view.getInputName(p) }}"
                {{ p.attr_wysiwyg | raw }}
            >{{ p.raw ? value|raw : value }}</textarea>
            <textarea
                class="form-control js-desc-wysiwyg"
                id="{{ view.getInputId(p) }}-validation"
                style="display:none;"
                {{ p.required ? 'data-rule-required="true"' }}
                {{ p.attr | raw }}
            >{{ p.raw ? value|raw : value }}</textarea>
        </div>
    </div>
    <script>require(['jquery', 'ckeditor'], function($) { CKEDITOR.replace('{{ view.getInputId(p) }}') })</script>
{% endmacro %}

{% macro accordion_start(p) %}
<div class="accordion accordion-blue panel-group" id="{{ p.id }}">
{% endmacro %}

{% macro accordion_end(p) %}
</div>
{% endmacro %}

{% macro accordion_panel_start(p) %}
    <div class="panel panel-default">
        <div class="panel-heading">
            <a class="accordion-toggle" href="#">{{ p.label }}</a>
        </div>
        <div class="panel-collapse accordion-body {{ p.in ? 'in' }}" id="{{ p.id }}">
            <div class="panel-body">
{% endmacro %}

{% macro accordion_panel_end(p) %}
            </div>
        </div>
    </div>
{% endmacro %}

{% macro button_add_image(m, arr) %}
    {% set view = LAYOUT.view('core/form-elements') %}
    {% set configId = m.config_id %}
    {% import _self as forms %}
    {% for obj in arr %}
        {% set p = view.merge(m, obj) %}
        {% set value = view.getInputValue(p) %}
        <div class='form-group {{ p.form_group_class }}'>
            {{ forms.label(p) }}
            <div class='{{ p.input_div_class|default('col-md-10')}}'>
                <div class='box-content'>
                    <div class='row fileupload-buttonbar'>
                        <div class='col-sm-12'>
                    <span class='btn btn-primary fileinput-button {{ configId }}_btn_add_image'>
                        <i class='icon-plus icon-white'></i>
                        <span class="{{ configId }}_btn_add_text">
                        {% if value %}
                            {{ 'Change Image...'|_ }}
                        {% else %}
                            {{ 'Add Image...'|_ }}
                        {% endif %}
                        </span>
                        <input class="model_image_url" type="hidden" name="model[{{ p.field }}]" value="{{ value }}"/>
                    </span>
                    <span class='btn btn-primary fileinput-button {{ configId }}_btn_remove_image'
                          style='display: {% if value %} block; {% else %} none; {% endif %}'>
                        Ã— {{ 'Remove Image...'|_ }}
                    </span>
                        </div>
                    </div>
                    <br>
                    <div class="{{ configId }}_current_image">
                        {% if value %}
                            <img src="{{ p.resize_url|replace({'--IMAGE--': value}) }}">
                        {% endif %}
                    </div>
                    <table class='table table-striped' role='presentation'>
                        <tbody class='files' data-target='#modal-gallery' data-toggle='modal-gallery'></tbody>
                    </table>
                </div>
            </div>
        </div>
    {% endfor %}
{% endmacro %}
