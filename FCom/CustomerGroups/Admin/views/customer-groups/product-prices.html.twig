{% set ctrl = APP.instance('FCom_CustomerGroups_Admin_Controller_TierPrices') %}
<script>
require(['jquery','underscore','backbone', 'jquery.validate', 'unique'], function($, _, Backbone) {
    var pricesGrid;
    var inputQty = 'input[data-col="qty"]';
    var selectGroupId = 'select[data-col="group_id"]';
    var originIds;
    var json = {
            rows: [],
            remove_ids: []
        };
    window.tierPricesGridRegister = function(grid) {
        pricesGrid = grid;
        grid.getGridSkeleton().Views.RowView.prototype.afterRender = function() {
            this.$el.find(inputQty).addClass('unique');
            this.$el.find(selectGroupId).addClass('unique');
        };
        grid.build();
        originIds = grid.getRows().pluck('id');
    };

    var bodyPrice = $('#tier-prices tbody');
    var prices, submiting = true;

    $('#catalog-products-form').submit(function(ev) {
        json.remove_ids = _.difference(originIds, pricesGrid.getRows().pluck('id'));
        var rows = pricesGrid.getRows().toJSON();
        for(var i in rows) {
            rows[i] = _.pick(rows[i], 'id', 'group_id', 'product_id', 'qty', 'base_price', 'sale_price', '_new');
        }
        json.rows = rows;
        $("#product_price_info").val(JSON.stringify(json));
        return checkUnique();
    });


    /*
    *custom validation function for checking duplicated input
    */
    function checkUnique(value, elem, params) {
        var error = true;
        if (typeof (elem) !== 'undefined') {
            pricesGrid.getRows().each(function (data) {

                    var parent = $(elem).parents('tr');
                    if (parent.attr('id') != data.get('id') && parent.find(inputQty).val() == data.get('qty') &&
                        parent.find(selectGroupId).val() == data.get('group_id')) {
                            error = false;
                        }
            });
        }

        return error;
    }

    $.validator.addMethod('checkUnique',checkUnique , 'Minimum Qty, Customer Group are already taken place.');

    $.validator.addClassRules("unique", {
        required: true,
        checkUnique: true
    });
});
</script>
<h3>{{ 'Price Chart'|_ }}</h3>
<input type='hidden' name='model[price_info]' id='product_price_info'/>

{{ THIS.view('core/backbonegrid').set('grid', ctrl.getTierPricesGrid(model)) | raw }}
