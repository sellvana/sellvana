{% set order = THIS.get('model') %}

{% set payableItems = order.getPayableItems() %}
{% set allMethods = APP.instance('Sellvana_Sales_Main').getPaymentMethods() %}
{% set allPayments = order.getAllPayments() %}
{% set currentLocale = LOCALE.getCurrentLocale() %}

<div class="f-section" id="order-container">

    {{ THIS.view('core/messages') | raw }}

    {% if payableItems %}
        <div id="payment-create-container">
            <h2>{{ 'Create a payment'|_ }}</h2>
            <table class="table table-bordered table-striped dataTable">
                <thead>
                <tr>
                    <th>{{ 'Product SKU'|_ }}</th>
                    <th>{{ 'Inventory SKU'|_ }}</th>
                    <th>{{ 'Product Name'|_ }}</th>
                    <th>{{ 'Qty Ordered'|_ }}</th>
                    <th>{{ 'Balance'|_ }}</th>
                    <th>{{ 'Paid'|_ }}</th>
                    <th>{{ 'Total Amount'|_ }}</th>
                </tr>
                </thead>
                <tbody>
                {% set totalAmt = 0 %}
                {% for i in payableItems %}
                    <tr class="item-container" id="item-{{ i.id() }}" data-price="{{ (i.get('row_total') - i.get('row_discount') - i.get('amount_in_payments')) / i.get('qty_ordered') }}">
                        <td>{{ i.get('product_sku') }}</td>
                        <td>{{ i.get('inventory_sku') }}</td>
                        <td>{{ i.get('product_name') }}</td>
                        <td>{{ i.get('qty_ordered') }}</td>
                        <td><strong class="item-amount-to-pay">{{ i.getAmountCanPay() | currency('base') }}</strong></td>
                        <td>{{ i.get('amount_paid') | currency('base') }}</td>
                        <td>
                            <span>{{ (i.getQtyCanPay() * i.getCalcPrice()) | currency('base') }}</span>
                            <input type="hidden" name="amounts[{{ i.id() }}]" class="item-amounts">
                            <input type="hidden" name="qtys[{{ i.get('id') }}]" value="{{ i.getQtyCanPay() }}" class="item-qtys">
                        </td>
                    </tr>
                    {% set totalAmt = totalAmt + i.getAmountCanPay() %}
                {% endfor %}
                </tbody>
                <tfoot>
                    {% for totalCode, total in order.getData('totals') %}
                        {% if total.value > 0 and totalCode not in ['subtotal', 'grand_total', 'amount_due', 'discount'] %}
                            <tr class="total-container" data-price="{{ total.value }}">
                                <td colspan="3" class="text-right"><label for="total_{{ totalCode }}">{{ total.label }}</label></td>
                                <td class="text-center"><input type="checkbox" name="totals[{{ totalCode }}]" id="total_{{ totalCode }}" value="1" checked></td>
                                <td colspan="3"><strong>{{ total.value | currency('base') }}</strong></td>
                            </tr>
                            {% set totalAmt = totalAmt + total.value %}
                        {% endif %}
                    {% endfor %}
                    <tr>
                        <td colspan="4" class="text-right"><strong>{{ 'Total Amount to Pay' | _ }}</strong></td>
                        <td colspan="3"><strong id="total-amount-to-pay">{{ totalAmt | currency('base') }}</strong></td>
                    </tr>
                    <tr>
                        <td colspan="4" class="text-right"><strong>{{ 'Payment Total' | _ }}</strong></td>
                        <td colspan="3"><input type="text" value="{{ totalAmt }}" name="amount" id="payment-total-amount" class="form-control"></td>
                    </tr>
                </tfoot>
            </table>
            <table class="table table-bordered table-striped dataTable">
                <thead>
                <tr>
                    <th>{{ 'Method'|_ }}</th>
                    <th>&nbsp;</th>
                </tr>
                </thead>
                <tfoot>
                <tr>
                    <td>
                        <select name="payment[payment_method]" class="form-control input-sm" id="payment-payment_method">
                            {% for key, m in allMethods %}
                                <option value="{{ key }}" {{ key == order.get('payment_method') ? 'selected' }}>{{ m.getName() }}</option>
                            {% endfor %}
                        </select>
                    </td>
                    <td>
                        <button id="btnPaymentCreate" data-container="#payment-create-container" class="btn btn-xs btn-primary" type="button">{{ 'Create'|_ }}</button>
                    </td>
                </tr>
                </tfoot>
            </table>
        </div>
    {% endif %}

    {% if payableItems and allPayments %}
        <hr>
    {% endif %}

    {% if not payableItems %}
        {{ 'There are no items available for a new payment' | _ }}
    {% endif %}

    {% if allPayments %}
        <h2>{{ 'Existing Payments' }}</h2>
        <div id="payment-update-container">
            <table class="table table-bordered table-striped dataTable">
                <thead>
                <tr>
                    <th>{{ 'Method'|_ }}</th>
                    <th>{{ 'Status'|_ }}</th>
                    <th>{{ 'Timeline'|_ }}</th>
                    <th>{{ 'Total Amount'|_ }}</th>
                    <th>{{ 'Items'|_ }}</th>
                    <th>{{ 'Delete'|_ }}</th>
                </tr>
                </thead>
                <tbody>
                {% for p in allPayments %}
                    {% set allOverallStates = p.state().overall().getNextValueLabels() %}
                    {% set allCustomStates = p.state().custom().getNextValueLabels() %}
                    {% set allTransactions = p.transactions() %}
                    <tr>
                        <td>
                            <p><strong>{{ allMethods[p.get('payment_method')].getName() }}</strong></p>
                        </td>
                        <td>
                            <p>{{ 'Overall:'|_ }} <strong>{{ p.state().overall().getValueLabel() }}</strong></p>
                            <p>{{ 'Processor:'|_ }} <strong>{{ p.state().processor().getValueLabel() }}</strong></p>
                            {% if allCustomStates %}
                                <p>{{ 'Custom:'|_ }}&nbsp;<select name="payments[{{ p.id() }}][state_custom]" class="form-control">
                                        {{ UTIL.optionsHtml(allCustomStates, p.state().custom().getValue()) | raw }}
                                    </select></p>
                            {% endif %}
                            {% if p.isManualStateManagementAllowed() %}
                                {% for k, v in allOverallStates %}
                                    {% if k != p.get('state_overall') %}
                                        <input type="button" name="payments[{{ p.id() }}][state_overall][{{ k }}]" value="{{ v }}" class="btn btn-default btn-xs js-payment-action">
                                    {% endif %}
                                {% endfor %}
                            {% endif %}
                            {% if allTransactions %}
                                <p>
                                    <a data-toggle="collapse" role="button" href="#payment{{ p.id() }}-transactions" aria-expanded="false" aria-controls="payment{{ p.id() }}-transactions">{{ 'Transactions' | _ }}: {{ allTransactions|length }}</a>
                                </p>
                            {% endif %}
                        </td>
                        <td>
                            <p>{{ 'Created:'|_ }} <strong>{{ p.get('create_at')|locdate }}</strong></p>
                        </td>
                        <td>
                            <p>{{ p.get('amount_due')|currency('base') }}</p>
                        </td>
                        <td>
                            {% for i in p.items() %}
                                <strong>{% if i.get('inventory_sku') %}{{ i.get('inventory_sku') }}{% else %}{{ i.getData('custom_label') }}{% endif %}</strong>: {{ i.get('amount') | currency('base') }}<br>
                            {% endfor %}
                        </td>
                        <td>
                            <input type="checkbox" class="btn btn-xs btn-danger" name="delete[{{ p.id }}]" value="1">
                        </td>
                    </tr>
                    {% if allTransactions %}
                        <tr class="payment-transactions" id="payment{{ p.id() }}-transactions">
                            <td></td>
                            <td colspan="4">
                                <table class="table table-bordered table-striped dataTable">
                                    <thead>
                                    <tr>
                                        <th>{{ 'ID'|_ }}</th>
                                        <th>{{ 'Timeline'|_ }}</th>
                                        <th>{{ 'Type'|_ }}</th>
                                        <th>{{ 'Amount'|_ }}</th>
                                        <th>{{ 'Fee'|_ }}</th>
                                        <th>{{ 'Actions'|_ }}</th>
                                    </tr>
                                    </thead>
                                    <tbody>
                                        {% for t in allTransactions %}
                                            {% set availableActions = t.getAvailableActions() %}
                                            <tr>
                                                <td>
                                                    <p>{{ t.get('transaction_id') }}</p>
                                                </td>
                                                <td>
                                                    <p>{{ 'Created:'|_ }} <strong>{{ t.get('create_at')|locdate }}</strong></p>
                                                </td>
                                                <td>
                                                    <p><strong>{{ t.get('transaction_type') }}</strong></p>
                                                </td>
                                                <td>
                                                    <p>{{ t.get('amount')|currency }}</p>
                                                </td>
                                                <td>
                                                    <p>{{ t.get('transaction_fee')|currency }}</p>
                                                </td>
                                                <td>
                                                    {% if t.get('transaction_id') %}
                                                        <div class="col-md-12">
                                                            <div class="form-inline">
                                                            {% for action, actionData in availableActions %}
                                                                <div class="form-group form-group-sm">
                                                                    {% if actionData.maxAmount %}
                                                                        <input type="text" name="actions[{{ p.id() }}][{{ t.id() }}][amount]" value="{{ actionData.maxAmount }}" class="form-control input-sm" />
                                                                    {% endif %}
                                                                    <input type="hidden" name="actions[{{ p.id() }}][{{ t.id() }}][type]" value="{{ action }}" />
                                                                    <button type="button" class="btn btn-xs transaction-action ladda-button" id="action-{{ t.id() }}-{{ action }}" data-style="expand-left">{{ actionData.label }}</button>
                                                                </div>
                                                                <br>
                                                            {% endfor %}
                                                            </div>
                                                        </div>
                                                    {% endif %}
                                                </td>
                                            </tr>
                                        {% endfor %}
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    {% endif %}
                {% endfor %}
                </tbody>
                <tfoot>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td><button id="btnPaymentUpdate" data-action="update" data-container="#payment-update-container" name="update" class="btn btn-xs btn-primary" type="button" value="1">{{ 'Update'|_ }}</button></td>
                </tr>
                </tfoot>
            </table>
        </div>
    {% endif %}
</div>

<script>
    require(['jquery', 'underscore', 'bootstrap-ladda', 'bootstrap-ladda-spin'], function($, _, Ladda) {
        var paymentCreateUrl = "{{ APP.href('payments/create?id=' ~ order.id()) }}";
        var paymentUpdateUrl = "{{ APP.href('payments/update?id=' ~ order.id()) }}";
        var transactionActionUrl = "{{ APP.href('payments/transaction_action?id=' ~ order.id()) }}";
        var defSuccessMsg = "{{ 'Operation successful'|_ }}";
        var defErrorMsg = "{{ 'There was an error during processing'|_ }}";
        var container = $('#tab-payments');
        var locale = '{{ currentLocale }}'.replace('_', '-');
        var maxTotal = {{ totalAmt }};

        function processPostResponse(data, status, xhr) {
            data = data || {};
            if (status !== 'success') {
                data.error = true;
                data.message = data.message || defErrorMsg;
            }
            if (data.tabs) {
                _.each(data.tabs, function (tabHtml, i) {
                    $('#tab-' + i).html(tabHtml).data('loaded', !!tabHtml);
                });
            }
            var msg = data.message || (data.error ? defErrorMsg : defSuccessMsg), type = data.error ? 'danger' : 'success';
            $.bootstrapGrowl(msg, {type: type, align: 'center', width: 'auto', delay: 5000});
        }

        function recalculateTotalAmt() {
            var total = 0;

            $('.item-container').each(function(idx, el) {
                var price = $(el).data('price');
                var qty = $(el).find('.item-qtys').first().val();
                total += price * qty;
            });

            $('.total-container').each(function(idx, el) {
                if ($(el).find('input[type=checkbox]').attr('checked')) {
                    total += $(el).data('price');
                }
            });

            total = Math.round(total * 100) / 100;
            total = Math.min(total, maxTotal);
            $('#payment-total-amount').val(total);
            total = total.toLocaleString(locale, {style: 'currency', currency: 'EUR'});
            //$('#total-amount-to-pay').text(total);
        }

        function recalculateItemAmts() {
            var calculatedTotal = 0;

            $('.item-container').each(function(idx, el) {
                var price = $(el).data('price');
                var qty = $(el).find('.item-qtys').first().val();
                calculatedTotal += price * qty;
            });

            var ratio = 0;
            var newTotal = $('#payment-total-amount').val();
            $('.total-container').each(function(idx, el) {
                if ($(el).find('input[type=checkbox]').attr('checked')) {
                    newTotal -= $(el).data('price');
                }
            });

            if (calculatedTotal > 0 && newTotal > 0) {
                ratio = newTotal / calculatedTotal;
            }

            $('.item-container').each(function(idx, el) {
                var price = $(el).data('price');
                var qty = $(el).find('.item-qtys').first().val();
                price = Math.round(price * qty * ratio * 100) / 100;
                $(el).find('.item-amounts').val(price);
                price = price.toLocaleString(locale, {style: 'currency', currency: 'EUR'});
                $(el).find('.item-amount-to-pay').text(price);
            });
        }

        // Create payments or update payments data
        container.unbind().on('click', '#btnPaymentCreate, #btnPaymentUpdate', function(ev) {
            var postUrl = !ev.target.dataset.action ? paymentCreateUrl : paymentUpdateUrl;
            var serializeData = $(ev.target.dataset.container).find('input, select').serializeArray();
            $.post(postUrl, serializeData, processPostResponse);
        });

        // Update payment status
        container.on('click', '.js-payment-action', function(ev) {
            var $el = $(ev.target), postData = {};
            postData[$el.attr('name')] = $el.val();
            $.post(paymentUpdateUrl, postData, processPostResponse);
        });

        container.on('click', '.transaction-action', function(ev) {
            var loader = Ladda.create(document.querySelector('#' + ev.target.id));
            loader.start();
            var serializeData = $(ev.target).parent('.form-group').find('input, button').serializeArray();
            $.post(transactionActionUrl, serializeData, processPostResponse);
        });

        container.on('click', '.item-container select, .total-container label, .total-container input', recalculateTotalAmt);

        container.on('keyup', '#payment-total-amount', recalculateItemAmts);

        // Workaround to avoid conflict with FCom.Admin.Tabs
        $('.payment-transactions').addClass('collapse').collapse({
            toggle: false
        });
    })
</script>