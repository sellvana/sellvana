{% set order = THIS.get('model') %}

{% set payableItems = order.getPayableItems() %}
{% set allMethods = APP.instance('Sellvana_Sales_Main').getPaymentMethods() %}
{% set allPayments = order.getAllPayments() %}

<div class="f-section" id="order-container">

    {{ THIS.view('core/messages') | raw }}

    {% if payableItems %}
        <div id="payment-create-container">
            <h2>{{ 'Create a payment'|_ }}</h2>
            <table class="table table-bordered table-striped dataTable">
                <thead>
                <tr>
                    <th>{{ 'Product SKU'|_ }}</th>
                    <th>{{ 'Inventory SKU'|_ }}</th>
                    <th>{{ 'Product Name'|_ }}</th>
                    <th>{{ 'Qty Ordered'|_ }}</th>
                    <th>{{ 'Qty To Pay'|_ }}</th>
                    <th>{{ 'Amount To Pay'|_ }}</th>
                </tr>
                </thead>
                <tbody>
                {% for i in payableItems %}
                    <tr>
                        <td>{{ i.get('product_sku') }}</td>
                        <td>{{ i.get('inventory_sku') }}</td>
                        <td>{{ i.get('product_name') }}</td>
                        <td>{{ i.get('qty_ordered') }}</td>
                        <td>
                            <select id="qty-to-pay" name="qtys[{{ i.get('id') }}]" class="form-control input-sm">
                                <option value=""></option>
                                {% set qtyCanPay = i.getQtyCanPay() %}
                                {% for q in range(1, qtyCanPay) %}
                                    <option value="{{ q }}" {{ q == qtyCanPay ? 'selected' }}>{{ q }}</option>
                                {% endfor %}
                            </select>
                        </td>
                        <td><input type="text" value="{{ i.getAmountCanPay() }}" /></td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
            <table class="table table-bordered table-striped dataTable">
                <thead>
                <tr>
                    <th>{{ 'Method'|_ }}</th>
                    <th>&nbsp;</th>
                </tr>
                </thead>
                <tfoot>
                <tr>
                    <td>
                        <select name="payment[payment_method]" class="form-control input-sm" id="payment-payment_method">
                            {% for m in allMethods %}
                                <option value="{{ m.getCode() }}" {{ m.getCode() == order.get('payment_method') ? 'selected' }}>{{ m.getName() }}</option>
                            {% endfor %}
                        </select>
                    </td>
                    <td>
                        <button id="btnPaymentCreate" data-container="#payment-create-container" class="btn btn-xs btn-primary" type="button">{{ 'Create'|_ }}</button>
                    </td>
                </tr>
                </tfoot>
            </table>
        </div>
    {% endif %}

    {% if payableItems and allPayments %}
        <hr>
    {% endif %}

    {% if not payableItems %}
        {{ 'There are no items available for a new payment' | _ }}
    {% endif %}

    {% if allPayments %}
        <h2>{{ 'Existing Payments' }}</h2>
        <div id="payment-update-container">
            <table class="table table-bordered table-striped dataTable">
                <thead>
                <tr>
                    <th>{{ 'Method'|_ }}</th>
                    <th>{{ 'Status'|_ }}</th>
                    <th>{{ 'Timeline'|_ }}</th>
                    <th>{{ 'Items'|_ }}</th>
                    <th>{{ 'Delete'|_ }}</th>
                </tr>
                </thead>
                <tbody>
                {% for p in allPayments %}
                    {% set allOverallStates = p.state().overall().getNextValueLabels() %}
                    {% set allCustomStates = p.state().custom().getNextValueLabels() %}
                    {% set allTransactions = p.transactions() %}
                    <tr>
                        <td>
                            <p><strong>{{ allMethods[p.get('payment_method')].getName() }}</strong></p>
                        </td>
                        <td>
                            <p>{{ 'Overall:'|_ }} <strong>{{ p.state().overall().getValueLabel() }}</strong></p>
                            <p>{{ 'Processor:'|_ }} <strong>{{ p.state().processor().getValueLabel() }}</strong></p>
                            {% if allCustomStates %}
                                <p>{{ 'Custom:'|_ }}&nbsp;<select name="payments[{{ p.id() }}][state_custom]" class="form-control">
                                        {{ UTIL.optionsHtml(allCustomStates, p.state().custom().getValue()) | raw }}
                                    </select></p>
                            {% endif %}
                            {% for k, v in allOverallStates %}
                                {% if k != p.get('state_overall') %}
                                    <input type="button" name="payments[{{ p.id() }}][state_overall][{{ k }}]" value="{{ v }}" class="btn btn-default btn-xs js-payment-action">
                                {% endif %}
                            {% endfor %}
                            {% if allTransactions %}
                                <p>
                                    <a data-toggle="collapse" role="button" href="#payment{{ p.id() }}-transactions" aria-expanded="false" aria-controls="payment{{ p.id() }}-transactions">{{ 'Transactions' | _ }}: {{ allTransactions|length }}</a>
                                </p>
                            {% endif %}
                        </td>
                        <td>
                            <p>{{ 'Created:'|_ }} <strong>{{ p.get('create_at')|locdate }}</strong></p>
                        </td>
                        <td>
                            {% for i in p.items() %}
                                <strong>{{ i.get('inventory_sku') ~ ' x' ~ i.get('qty') }}</strong>: {{ i.get('product_name') }}
                            {% endfor %}
                        </td>
                        <td>
                            <input type="checkbox" class="btn btn-xs btn-danger" name="delete[{{ p.id }}]" value="1">
                        </td>
                    </tr>
                    {% if allTransactions %}
                        <tr class="payment-transactions" id="payment{{ p.id() }}-transactions">
                            <td></td>
                            <td colspan="4">
                                <table class="table table-bordered table-striped dataTable">
                                    <thead>
                                    <tr>
                                        <th>{{ 'ID'|_ }}</th>
                                        <th>{{ 'Timeline'|_ }}</th>
                                        <th>{{ 'Type'|_ }}</th>
                                        <th>{{ 'Amount'|_ }}</th>
                                        <th>{{ 'Fee'|_ }}</th>
                                        <th>{{ 'Actions'|_ }}</th>
                                    </tr>
                                    </thead>
                                    <tbody>
                                        {% for t in allTransactions %}
                                            {% set availableActions = t.getAvailableActions() %}
                                            <tr>
                                                <td>
                                                    <p>{{ t.get('transaction_id') }}</p>
                                                </td>
                                                <td>
                                                    <p>{{ 'Created:'|_ }} <strong>{{ t.get('create_at')|locdate }}</strong></p>
                                                </td>
                                                <td>
                                                    <p><strong>{{ t.get('transaction_type') }}</strong></p>
                                                </td>
                                                <td>
                                                    <p>{{ t.get('amount')|currency }}</p>
                                                </td>
                                                <td>
                                                    <p>{{ t.get('transaction_fee')|currency }}</p>
                                                </td>
                                                <td>
                                                    {% if t.get('transaction_id') %}
                                                        <div class="col-md-12">
                                                            <div class="form-inline">
                                                            {% for action, actionData in availableActions %}
                                                                <div class="form-group form-group-sm">
                                                                    {% if actionData.maxAmount %}
                                                                        <input type="text" name="actions[{{ p.id() }}][{{ t.id() }}][amount]" value="{{ actionData.maxAmount }}" class="form-control input-sm" />
                                                                    {% endif %}
                                                                    <input type="hidden" name="actions[{{ p.id() }}][{{ t.id() }}][type]" value="{{ action }}" />
                                                                    <button type="button" class="btn btn-xs transaction-action ladda-button" id="action-{{ t.id() }}-{{ action }}" data-style="expand-left">{{ actionData.label }}</button>
                                                                </div>
                                                                <br>
                                                            {% endfor %}
                                                            </div>
                                                        </div>
                                                    {% endif %}
                                                </td>
                                            </tr>
                                        {% endfor %}
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    {% endif %}
                {% endfor %}
                </tbody>
                <tfoot>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td><button id="btnPaymentUpdate" data-action="update" data-container="#payment-update-container" name="update" class="btn btn-xs btn-primary" type="button" value="1">{{ 'Update'|_ }}</button></td>
                </tr>
                </tfoot>
            </table>
        </div>
    {% endif %}
</div>

<script>
    require(['jquery', 'underscore', 'bootstrap-ladda', 'bootstrap-ladda-spin'], function($, _, Ladda) {
        var paymentCreateUrl = "{{ APP.href('payments/create?id=' ~ order.id()) }}";
        var paymentUpdateUrl = "{{ APP.href('payments/update?id=' ~ order.id()) }}";
        var transactionActionUrl = "{{ APP.href('payments/transaction_action?id=' ~ order.id()) }}";
        var defSuccessMsg = "{{ 'Operation successful'|_ }}";
        var defErrorMsg = "{{ 'There was an error during processing'|_ }}";
        var container = $('#tab-payments');

        function processPostResponse(data, status, xhr) {
            data = data || {};
            if (status !== 'success') {
                data.error = true;
                data.message = data.message || defErrorMsg;
            }
            if (data.tabs) {
                _.each(data.tabs, function (tabHtml, i) {
                    $('#tab-' + i).html(tabHtml).data('loaded', !!tabHtml);
                });
            }
            var msg = data.message || (data.error ? defErrorMsg : defSuccessMsg), type = data.error ? 'danger' : 'success';
            $.bootstrapGrowl(msg, {type: type, align: 'center', width: 'auto', delay: 5000});
        }

        // Create payments or update payments data
        container.unbind().on('click', '#btnPaymentCreate, #btnPaymentUpdate', function(ev) {
            var postUrl = !ev.target.dataset.action ? paymentCreateUrl : paymentUpdateUrl;
            var serializeData = $(ev.target.dataset.container).find('input, select').serializeArray();
            $.post(postUrl, serializeData, processPostResponse);
        });

        // Update payment status
        container.on('click', '.js-payment-action', function(ev) {
            var $el = $(ev.target), postData = {};
            postData[$el.attr('name')] = $el.val();
            $.post(paymentUpdateUrl, postData, processPostResponse);
        });

        container.on('click', '.transaction-action', function(ev) {
            var loader = Ladda.create(document.querySelector('#' + ev.target.id));
            loader.start();
            var serializeData = $(ev.target).parent('.form-group').find('input, button').serializeArray();
            $.post(transactionActionUrl, serializeData, processPostResponse);
        });

        // Workaround to avoid conflict with FCom.Admin.Tabs
        $('.payment-transactions').addClass('collapse').collapse({
            toggle: false
        });
    })
</script>