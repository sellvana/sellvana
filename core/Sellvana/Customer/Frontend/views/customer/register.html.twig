{% set validator = THIS.validator(THIS.get('formId')) %}
{% set password_strength = CONFIG.get('modules/Sellvana_Customer/password_strength') ? 'true' : 'false' %}

    {{ THIS.view('core/messages') | raw }}
    <form action="{{ APP.href('customer/register') }}" method="post" id="register-form" role="form">
      <input type="hidden" name="X-CSRF-TOKEN" value="{{ SESSION.csrfToken() }}"/>
      <fieldset class="f-authentification-form f-register-form">
      <header class="f-page-header">
        <h1 class="f-page-title">{{ 'Register on ' |_(CONFIG.get('modules/FCom_Core/site_title')) }}</h1>
      </header>
        <div class="row">
          <div class="form-group col-sm-6">
            <label for="register-firstname" class="control-label required">{{ "First Name" | _ }}</label>
            <div class="controls">
              <input type="text" name="model[firstname]" class="required form-control" id="register-firstname" value="{{ validator.fieldValue('firstname') }}"/>
            </div>
          </div>
          <div class="form-group col-sm-6">
            <label for="register-lastname" class="control-label required">{{ "Last Name" | _ }}</label>
            <div class="controls">
              <input type="text" name="model[lastname]" class="required form-control" id="register-lastname" value="{{ validator.fieldValue('lastname') }}"/>
            </div>
          </div>
        </div>
        <div class="row">
          <div class="form-group col-sm-6">
            <label for="register-email" class="control-label required">{{ "Email" | _ }}</label>
            <div class="controls">
              <input type="email" name="model[email]" class="required form-control" id="register-email" value="{{ validator.fieldValue('email') }}"/>
            </div>
          </div>
        </div>
        <div class="row">
          <div class="form-group col-sm-6">
            <label for="model-password" class="control-label required">{{ "Password" | _ }}</label>
            <div class="controls">
              <input type="password" name="model[password]" class="required form-control
              {% if password_strength == 'true'  %}
                {{ "has-progress-bar" }}
              {% endif %}
              " id="model-password" pattern=".{6,}"/>
            </div>
          </div>
          <div class="form-group col-sm-6">
            <label for="register-password_confirm" class="control-label required">{{ "Confirm Password" | _ }}</label>
            <div class="controls">
              <input type="password" name="model[password_confirm]" class="required form-control" equalto="#model-password" id="register-password_confirm" pattern=".{6,}"/>
            </div>
          </div>
        </div>
          {% if password_strength == 'true' %}
          <div class="row">
              <div class="form-group col-sm-12">
                  <span class="help-block f-required-notice">Password must be at least 7 characters in length and must include at least one letter, one capital letter, one number, and one special character.</span>
              </div>
          </div>
          {% endif %}
        <div class="form-group">
          <input type="submit" class="btn btn-primary btn-lg" value="{{ "Register" | _ }}"/>
          <a href="{{ APP.href() }}login" class="btn btn-link">&laquo; Back to login</a>
          <span class="help-block f-required-notice">* {{ "Indicates Required Fields" | _ }}</span>
        </div>
      </fieldset>
    </form>

<script>
require(['jquery', 'jquery.validate', 'fcom.password'], function($) {
    $(function() {
//        $('#register-form').validate();
//        $.validator.addMethod('passwordSecurity', validatePasswordSecurity, 'Incorrect password entry');
//        function validatePasswordSecurity (value, element, param) {
//            var regex = /(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[~!@#$%^&*()_+=}{><;:\]\[?]).{7,}/;
//            if (value.length > 0 && !regex.test(value)) {
//                return false;
//            }
//            return true;
//        }
        $('#register-form').validate({
            rules:{
                'model[password]': {
                    required: true,
                    passwordSecurity: {{ password_strength }}
                }
            },
            messages: {
                'model[password]': {
                    passwordSecurity: 'Incorrect password entry'
                }
            }
        });
    })
})
</script>
