<!--{ label: Addresses }-->
<!--{ pos: 20 }-->
<!--{ model_new_hide: true }-->
<!--{ async: true }-->

{% set m = THIS.get('model') %}
{% set hlp = APP.instance('Sellvana_Customer_Admin_Controller_Addresses') %}
{{ THIS.view('core/backbonegrid').set('grid', hlp.getCustomerAddressesGridConfig(m)) | raw }}
<script>
    function getState (country, rowCurrent) {
        $.post('{{ APP.href('addresses/get_state') }}', {country: country}).done(function (data) {
            var region = $('#region');
            var parent = region.parent();
            region.remove();
            var currentRegion = '';
            if (rowCurrent) {
                currentRegion = rowCurrent.get('region');
            }
            if (!$.isEmptyObject(data)) {
                var select = '<select name="region" id="region" class="form-control valid"></select>';
                parent.append(select);
                region = $('#region');

                for (var i in data ) {
                    var selected = (i == currentRegion) ? 'selected': '';
                    var option = '<option value="'+ i +'"'+ selected +'>' + data[i] + '</option>';
                    region.append(option);
                }
            } else {
                var input = '<input value="'+ currentRegion +'" name="region" id="region" type="text" class="form-control" data-rule-required="true" />';
                parent.append(input);
            }
        });
    }

    function renderModalAddress (el, allRows, rowCurrent) {

        $('#country').on('change',function () {
            getState($(this).val());
        });
        getState($('#country').val(), rowCurrent);
    }
    require(['backbone', 'underscore', 'jquery'], function(Backbone, _, $) {
        window.customer_address_grid = function(grid) {
            grid.getGridSkeleton().Views.RowView.prototype.afterRender = function () {
                var row = this.model.toJSON();
                var column = _.findWhere(grid.getCols().toJSON(), {name: 'region'});
                var options = column.options;
                var region = options['@'+row.country];
                var td = this.$el.find('td[data-col="region"]');
                if (typeof (region) != 'undefined') {
                    td.html(region[row.region]);
                } else {
                    td.html(row.region);
                }
            };
            grid.build();
        }
    })
</script>
