{% macro widget__insert_media(widget, library, context) %}
    {% import LAYOUT.view('core/form-elements').twigName() as forms %}
    {% import LAYOUT.view('admin/layout-editor').twigName() as layout %}
    {{ forms.input({label: "Width"|_, name: "#{context.prefix}[widgets][#{widget.id}][width]", value: widget.width|default('640'), field: "width-#{widget.id}"}) }}
    {{ forms.input({label: "Height"|_, name: "#{context.prefix}[widgets][#{widget.id}][height]", value: widget.height|default('320'), field: "height-#{widget.id}"}) }}
    {{ forms.hidden({name: "#{context.prefix}[widgets][#{widget.id}][src]", value: widget.src, field: "src-#{widget.id}"}) }}
    <div id="lib-images-{{ widget.id }}">
        {% set type = 'images' %}
        {% set medialibConfig = APP.instance('FCom_Admin_Controller_MediaLibrary').gridConfigLibrary({'id': 'media_all_' ~ type}) %}
        {% set medialibConfigCompiled = LAYOUT.view('core/griddle').set('grid', medialibConfig).getGridConfig() %}
        <!-- Att -->
        <button type="button" class='btn btn-primary btn-select-images'>{{ "Select Image"|_ }}</button>
        <div class="fade modal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            &times;
                        </button>
                        <h4 class="modal-title">{{ "Choose Image"|_ }}</h4>
                    </div>
                    <div class="modal-body">
                        {# {{ LAYOUT.view('core/griddle').set('grid', medialibConfig) | raw }} #}
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary">Save changes</button>
                    </div>
                </div>
            </div>
        </div>

        <script type="text/javascript">
            window.registerGrid{{ medialibConfig.config.id }} = function(grid) {
                // componentDidMout for specific insert_media widget
            }

            var grids = [];
            require(['jquery', 'underscore', 'react', 'fcom.griddle'], function ($, _, React, FComGriddleComponent) {
                $(document).on('click', '.btn-select-images', function(e) {
                    e.preventDefault();
                    var mediaModal = $(this).next('.modal');
                    var ci         = $(this).parents('div.js-widget-box').data('id');
                    var ele        = this.nextElementSibling.querySelector('.modal-body');
                    var config     = {{ UTIL.toJson(medialibConfigCompiled) | raw }};
                    var newId      = config.id + '_' + ci;

                    if (!_.contains(grids, newId)) {
                        React.unmountComponentAtNode(ele);
                        var mConfig = _.extend(config, { id: newId });
                        React.render(
                            React.createElement(FComGriddleComponent, { key: newId, config: mConfig }), ele
                        );
                        grids.push(newId);
                    }

                    mediaModal.modal('show');
                });
            });
        </script>
        <!-- Att end -->
    </div>
    {{ layout.widget_custom_params(widget, library, context) }}
{% endmacro %}
