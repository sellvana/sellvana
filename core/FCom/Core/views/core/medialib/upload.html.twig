{#{{ dump(uploadConfig) }}#}
<div class='' id='{{ config.id }}-media-upload'>
    <div class='box-content'>
        <div class='row fileupload-buttonbar'>
            <div class='col-sm-12'>
                <span class='btn btn-success fileinput-button'>
                    <i class='icon-plus icon-white'></i>
                    <span>Add files...</span>
                    <input data-bfi-disabled='' multiple='' name='upload[]' type='file'>
                </span>
                <button class='btn btn-primary start' type='submit'>
                    <i class='icon-upload icon-white'></i>
                    <span>Start upload</span>
                </button>
                <button class='btn btn-warning cancel' type='reset'>
                    <i class='icon-ban-circle icon-white'></i>
                    <span>Cancel upload</span>
                </button>
            </div>
            <div class='col-sm-5 fileupload-progress fade'>
                <div aria-valuemax='100' aria-valuemin='0' class='progress progress-success progress-striped active'
                     role='progressbar'>
                    <div class='bar' style='width:0%;'></div>
                </div>
                <div class='progress-extended'></div>
            </div>
        </div>
        <div class='fileupload-loading'></div>
        <br>
        <table class='table table-striped' role='presentation'>
            <tbody class='files' data-target='#modal-gallery' data-toggle='modal-gallery'></tbody>
        </table>
    </div>
    <script>
        var uploadTr = '{{ 'Upload'|_ }}';
        var errorTr = '{{ 'Error'|_ }}';
        var cancelTr = '{{ 'Cancel'|_ }}';
    </script>
    {% verbatim %}
    <script id="template-upload" type="text/x-tmpl">
        {% for (var i=0, file; file=o.files[i]; i++) { %}
            <tr class="template-upload fade">
                <td class="preview"><span class="fade"></span></td>
                <td class="name"><span>{%=file.name%}</span></td>
                <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
                {% if (file.error) { %}
                    <td class="error" colspan="2"><span class="label label-important">{%=
                        errorTr%}</span> {%=file.error%}</td>
                {% } else if (o.files.valid && !i) { %}
                <td>
                    <div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                        <div class="bar" style="width:0%;"></div>
                    </div>
                </td>
                <td>
                    {% if (!o.options.autoUpload) { %}
                        <button class="btn btn-primary start">
                            <i class="icon-upload icon-white"></i>
                            <span>{%=uploadTr%}</span>
                        </button>
                    {% } %}
                </td>
                {% } else { %}
                    <td colspan="2"></td>
                {% } %}
                <td>
                   {% if (!i) { %}
                    <button class="btn btn-warning cancel">
                        <i class="icon-ban-circle icon-white"></i>
                        <span>{%=cancelTr%}</span>
                    </button>
                    {% } %}
                </td>
            </tr>
        {% } %}

    </script>
<!-- The template to display files available for download -->

    <script id="template-download" type="text/x-tmpl">
        {% for (var i=0, file; file=o.files[i]; i++) { %}
            <tr class="template-download fade">
               {% if (file.error) { %}
                    <td></td>
                    <td class="name"><span>{%=file.name%}</span></td>
                    <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
                    <td class="error" colspan="2"><span class="label label-important">{%=
                          errorTr%}</span> {%=file.error%}</td>
               {% } else { %}
                    <td class="previe">
                   {% if (file.thumbnail_url) { %}
                       <a href="{%=file.url%}" title="{%=
                         file.name%}" data-gallery="gallery" download="{%=file.name%}">
                           <img src="{%=file.thumbnail_url%}">
                       </a>
                   {% } %}
                   </td>
                   <td class="name">
                       <a href="{%=file.url%}" title="{%=file.name%}" data-gallery="{%=
                         file.thumbnail_url&&'gallery'%}" download="{%=file.name%}">
                           {%=file.name%}
                       </a>
                   </td>
                   <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
                   <td colspan="2"></td>
               {% } %}
               <td>
                   <input type="checkbox" name="delete" value="1" class="toggle">
               </td>
            </tr>
        {% } %}

    </script>
    {% endverbatim %}
</div>

<script type="text/javascript">
    require(['tmpl', 'load-image', 'canvas-to-blob', 'iframe-transport', 'jquery.fileupload', 'jquery.fileupload-fp', 'jquery.fileupload-ui'], function () {
        var uploadUrl = "{{ APP.href("media/grid/upload?type=") | raw }}{{config.type ? config.type : "" }}";
        $("#{{config.id}}-media-upload").fileupload({
            url: uploadUrl,
            multiple:true
            {% if config.mode and config.mode == "thumbnail" %}
                ,acceptFileTypes:  /(\.|\/)(jpe?g|tiff|gif|png|bmp)$/i
            {% elseif uploadConfig.filetype_regex %}
                ,acceptFileTypes: {{ uploadConfig.filetype_regex }}
            {% endif %}
        })
        .bind('fileuploadalways', function(e, data) {
            var grid = {{config.id}}_grid;
            if ($.isArray(data.result.files)) {
                if (typeof grid.getRows.add == 'function') {//get self media grid
                    data.result.files.forEach(function (obj) {

                        //insert uploaded file in media grid and get selected
                        var newRow = obj;
                        if (newRow.error) {
                            return;
                        }

                        //if multiselect config param is set, we insert  new uploaded rows in library grid with checked.
                        {% if config.multiSelAllowed %}
                        newRow.selected = true;
                        grid.getSelectedRows().add(obj);
                        {% endif %}

                        grid.getRows().add(newRow, {merge: true}).trigger('render');

                        $('td.name span').each(function (i) {
                            if ($(this).html() === obj.file_name) {
                                $(this).parents('tr:first').remove();
                            }
                        });
                    })
                } else {
                    var rows = [], selectedRows = [];
                    data.result.files.forEach(function (obj) {
                        {% if config.multiSelAllowed %}
                        selectedRows.push(obj);
                        {% endif %}

                        rows.push(obj);

                        $('td.name span').each(function (i) {
                            if ($(this).html() === obj.file_name) {
                                $(this).parents('tr:first').remove();
                            }
                        });
                    });

                    if (selectedRows.length) {
                        grid.addSelectedRows(selectedRows);
                    }
                    grid.addRows(rows);
                }
            }
        });
    });

</script>
