{% set app = THIS.view('app') %}
{% set modules = app.getModules() %}
{% set routes = app.getRoutes() %}
{% set navs = app.getNavs() %}
{% set navTree = app.getNavTree() %}
{% set env = app.getEnv() %}
{% set user = APP.instance('FCom_Admin_Model_User').sessionUser() %}

<script>
define(['sv-app', 'jquery', 'vue', 'vuex', 'vue-router', 'sv-comp-header', 'text!sv-comp-header-tpl', 'sv-comp-menu', 'text!sv-comp-menu-tpl'],
    function (SvApp, $, Vue, Vuex, VueRouter, SvHeader, SvHeaderTpl, SvMenu, menuTpl) {
        Vue.use(VueRouter);

        SvApp.methods.setModules({{ modules|json_encode|raw }});

        var rawRoutes = ({{ routes|json_encode|raw }}), routes = [];
        for (var i in rawRoutes) {
            var r = rawRoutes[i];
            routes.push({path: r.path, component: SvApp.methods.routeView(r.require)});
        }
        var router = new VueRouter({
            routes: routes
        });
        SvApp.router = router;
/*
        router.beforeEach(function (transition) {
console.log(transition);
            if (transition.path !== '/login' && !SvApp.store.state.user) {
                router.push('/login');
            } else {
                router.next();
            }
        });
*/
        var navTree = ({{ navTree|json_encode|raw }}),
            user = ({{ user.as_array()|json_encode|raw }}),
            env = ({{ env|json_encode|raw }}),
            csrfToken = '{{ SESSION.csrfToken() }}';

        SvApp.store.commit('setData', {
            navTree: navTree,
            user: user,
            env: env,
            csrfToken: csrfToken
        });

        SvApp.views.app = new Vue({
            el: '#sv-app',
            //delimiters: ['[[', ']]'],
            mixins: [SvApp.mixins.common],
            data: function () {
                return {
                    ui: this.$store.state.ui,
                    isLoaded: true
                };
            },
            computed: {
                isLoggedIn: function () {
                    return this.$store.state.user && this.$store.state.user.id;
                }
            },
            methods: {
                pageClick: function() {
                    this.ddToggle(false);
                }
            },
            components: {
                'sv-comp-header': SvHeader,
                'sv-comp-menu': SvMenu
            },
            router: router,
            store: SvApp.store
        });

});
</script>