{% set spaHlp = APP.instance('FCom_AdminSPA_AdminSPA') %}
{% set modules = spaHlp.getModules() %}
{% set routes = spaHlp.getRoutes() %}
{% set navs = spaHlp.getNavs() %}
{% set user = APP.instance('FCom_Admin_Model_User').sessionUser() %}

<script>
Sellvana = {
    modules: {{ modules|json_encode|raw }}
};

define(['jquery', 'vue', 'vue-router', 'axios', 'vue-axios', 'vue-i18n', 'sv-header'], function ($, Vue, VueRouter, Axios, VueAxios, VueI18n, SellvanaHeader) {
//define(['vue-router', 'axios', 'vue-axios'], function (VueRouter, Axios, VueAxios) {
    Vue.use(VueRouter, Axios, VueAxios, VueI18n);
    //Vue.config.delimiters = ['#{', '}'];

    Sellvana._ = function(str, args) { return $t(str, args); };

    function view(args) {
        return function(resolve, reject) {
            require(args, function (component, template) {
                if (!component) {
                    component = {};
                }
                if (template) {
                    component.template = template;
                }
                resolve(component);
            });
        }
    }

    Sellvana.app = new Vue({
        el: '#sv-app',
        //delimiters: ['#{', '}'],
        data: {
            navs: {{ navs|json_encode|raw }},
            user: {{ user.as_array()|json_encode|raw }},
            isLoggedIn: {{ user ? 'true' : 'false' }}
        },
        components: {
            'sv-header': SellvanaHeader
        },
        router: new VueRouter({
            routes: [
{% for i, r in routes %}
                {% if i %},{% endif %}{ path: '{{ r.path }}', component: view({{ r.require|json_encode|raw }}) }
{% endfor %}
            ]
        })
    });
});
</script>