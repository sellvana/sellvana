<!--{ label: IE/Export }-->
<!--{ pos: 10 }-->
{% set m = THIS.get('model') %}
{% set ieConfig = APP.instance('FCom_Admin_Controller_ImportExport') %}

<script type="text/javascript">
    /*require(['jquery'], function ($) {
        window.modelsGridRegister = function (grid) {
            grid.build();
            $('#' + grid.id).find('input[type=checkbox]').on('click', function(){
                var val = this.checked;
                var id = this.name.replace(grid.id + '[checked][','').replace(']','');

                var rowsCol = grid.getRows();

                var row = rowsCol.get(id);

                var children = row.get('children');

                if(children) {
                    _.each(children, function (o) {
                        var chName = grid.id + '[checked][' + o + ']';
                        var $chBox = $('input[name="' + chName + '"]');
                        if (val && !$chBox.is(':checked')) {
                            $chBox.click();
                        } else if (!val && $chBox.is(':checked')) {
                            $chBox.click();
                        }
                    });
                }
                if (!val) {
                    var parent = row.get('parent');

                    if (parent) {
                        var pName = grid.id + '[checked][' + parent + ']';
                        $('input[name="' + pName + '"]').prop('checked', false);
                        if (parent != 'FCom') {
                            $('input[name="' + grid.id + '[checked][FCom]' + '"]').prop('checked', false);
                        }
                    }
                }
            });
            $('#btn_export_start').click(function(e){
                e.preventDefault();
                var url = '{{ APP.href('importexport/export') }}';
                var data = $('input[name^=ie_export_grid]').serializeArray();
                $.post(url, data).done(function(d){
                    console.log(d);
                });
            });
        }
    });*/
</script>
<div class="panel-body">
    {{ THIS.view('core/griddle').set('grid', ieConfig.getExportConfig(m)) | raw }}
    <div class="form-group">
        <label for="export_file_name" class="col-md-2 control-label">{{ "Export file name"|_ }}</label>
        <div class="col-md-5"><input type="text" class="form-control" id="export_file_name" name="ie_export_grid[export_file_name]" placeholder="{{"Leave empty for default"|_}}">
        <span class="help-block">{{ "Leave empty for default file name, \"export.json\""|_ }}</span>
        </div>
    </div>
    <button type="button" class="btn btn-md btn-primary ladda-button" data-style="expand-left" id="btn_export_start">{{ "Export selected models"|_ }}</button>
</div>

<script>
    /*==========  React section  ==========*/
    require(['jquery', 'underscore', 'react', 'bootstrap-ladda', 'bootstrap-ladda-spin'], function($, _, React, Ladda) {
        var mainGrid;
        window.modelsGridRegister = function (grid) {
            mainGrid = grid;
            var loader = Ladda.create(document.querySelector('.ladda-button'));

            $(grid.getDOMNode()).find('input[type=checkbox]').on('click', function(){
                var isChecked = this.checked;
                var addRows = [];
                var id = this.name.replace(grid.getConfig('id') + '[checked][','').replace(']','');

                var rowsCol = grid.getRows();
                var tRow = _.find(rowsCol, function(row) {
                    if (row.id === id) return row;
                });
                addRows.push(_.findWhere(rowsCol, {id: id}));
                var children = tRow['children'];
                if (children) {
                    _.each(children, function (child) {
                        var fRow = _.findWhere(rowsCol, {id: child});
                        if (fRow) {
                            addRows.push(fRow);
                            if (fRow.children.length) {
                                _.each(fRow.children, function(subChild) {
                                    var sRow = _.findWhere(rowsCol, {id: subChild});
                                    addRows.push(sRow);
                                });
                            }
                        }
                        if (isChecked) {
                            grid.addSelectedRows(addRows);
                            addRows.push(_.findWhere(rowsCol, {id: id}));
                        } else {
                            grid.removeSelectedRows(addRows);
                        }
                    });
                }
            });

            /**
             * Parse selected rows for post data
             *
             * @returns {*}
             * @private
             */
            function _getDataForPost() {
                var rows = mainGrid.getSelectedRows();
                var results = _.map(rows, function (row) {
                    return {
                        name: 'ie_export_grid[checked]['+row.id+']',
                        value: 'on'
                    }
                });

                results.push({
                    name: 'ie_export_grid[export_file_name]',
                    value: $('#export_file_name').val()
                });

                return results;
            }

            $(document).on('click', '#btn_export_start', function (e) {
                e.preventDefault();
                loader.start();
                var data = _getDataForPost();
                $.post('{{ APP.href('importexport/export') }}', data).done(function (response) {
                    console.log('done', response);
                }).fail(function (error) {
                    console.log('fail', error);
                }).always(function () {
                    loader.stop();
                });
            });
        }
    });
</script>