{% set tabs = THIS.get('tabs') %}
{% set formUrl = THIS.get('form_url') %}
{% set formId = THIS.get('form_id') %}
{% set curTab = THIS.get('cur_tab') %}
{% set model = THIS.get('model') %}
{% set validator = THIS.validator(formId, model) %}

<script>
    require(["jquery", "underscore", "fcom.admin", "bootstrap", "jquery.validate", 'fcom.password'], function($, _) {
        $(function() {
            window.adminForm = FCom.Admin.form({
                form:     '{{ formId }}',
                tabs:     '.adm-tabs-sidebar li',
                panes:    '.adm-tabs-content',
                url_get:  '{{ formUrl }}',
                url_post: '{{ formUrl }}'
            });

            var mainForm = '{{ formId }}';
            var mainFormEle = $('#' + mainForm);

            mainFormEle.on('keypress', 'input', function (e) {
                var charCode = e.charCode || e.keyCode || e.which;
                if (charCode == 13) {
                    //enter will submit instead call first input type submit
                    if ($(e.target).parents('div.f-grid-wrapper').length == 0) {
                        $("#{{ formId }}").submit();
                    }
                    //prevent enter to submit form to avoid filter issue
                    return false;
                }
            });

            mainFormEle.validate({
                ignore: [],//for invisible elements
                invalidHandler: function(event, validator) {
                    var info = {};
                    FCom.Admin.log(validator.invalid);
                    for(key in validator.invalid) {
                        var element = jQuery('input[name="'+key+'"], textarea[name="'+key+'"], select[name="'+key+'"]');
                        if (element.length>0) {
                            var tab = element.parents('div.js-main-form-tab:first');
                            var key = '#'+tab.attr('id');
                            if (typeof(info[key]) === 'undefined')
                                info[key] = 1;
                            else
                                info[key]++;
                        }
                    }

                    $('ul#tabs').find('li a').each(function(index) {
                        var val = info[$(this).attr('href')];
                        if (typeof(val) !== 'undefined')
                        {
//                            if ($(this).find('span.badge').length === 0) {
//                                $(this).append('<span class="badge badge-important"></span>');
//                            }
//                            $(this).find('span.badge').html(val>0 ? val : '');
                            if ($(this).find('i.error').length === 0) {
                                $(this).append('<i class="icon-warning-sign error"></i>');
                            }
                        } else {
                            $(this).find('i.error').remove();
//                            $(this).find('span.badge').remove();
                        }
                    });
                    for(key in info) {
                        $('a[href="'+key+'"]').trigger('click');
                        break;
                    }

                }
            });
            mainFormEle.find('input, textarea, select').on('change', function () {
                flagEdit();
            });
            // prevent validate when delete item
            $('button[type="submit"]').click(function () {
                if ($(this).hasClass('ignore-validate')) {
                    mainFormEle.validate().currentForm = '';
                    return true;
                }
            });

            FCom.Admin.Tabs('.f-admin-main', {
                url_get: "{{ formUrl }}",
                cur_tab: "{{ curTab }}",
                tab_load_callback: function(i) {
                    adminForm.createSwitchButton();
                    adminForm.wysiwygInit();
                }
            });

            //init
            adminForm.createSwitchButton();
            adminForm.wysiwygInit();
            for (var i in CKEDITOR.instances) {
                CKEDITOR.instances[i].on('instanceReady', function () {
                    var self = this;
                    this.document.on('keyup', function () {
                        var descWysiwyg = self;
                        var idElem = $(self.element).attr('id');
                        var elem = $('#'+ idElem).parent().find('textarea.js-desc-wysiwyg');
                        elem.val(descWysiwyg.getData());
                        elem.valid();
                        flagEdit();
                    })
                })
            };

            function flagEdit() {
                $('ul#tabs').find('li.active').each(function () {
                    if ($(this).children('a').find('i.icon-pencil').length === 0) {
                        if ($(this).children('a').children('i.error').length !== 0) {
                            $('<i class="icon-pencil"></i>').insertBefore($(this).children('a').children('i.error'));
                        } else {
                            $(this).children('a').append('<i class="icon-pencil"></i>');
                        }
                    }
                });
            }
        });
    });
</script>
<div class="f-admin-main-view f-sidebar-view">
    <form id="{{ formId }}" class="form form-horizontal validate-form" action="{{ formUrl }}" method="post">
        <div class="page-header f-admin-page-header">
            <h1 class="f-page-title">
                <i class="icon-table"></i>
                {{ THIS.get('title') }}
            </h1>
            <div class="btn-group">
                {{ THIS.getActionsHtml() | raw }}
            </div>
            {% if THIS.get('other_info') %}
                <div class="entity-glimpse">{{ THIS.get('other_info') }}</div>
            {% endif %}
        </div>

        {{ THIS.view('core/messages') | raw }}

        <div class="row f-admin-main">
            <div class="tabbable tabs-left">
                <ul class="nav nav-tabs nav-stacked f-admin-nav-sidebar" id="tabs">
                    {% if THIS.get('sidebar_img') %}
                        <li><img src="{{ THIS.get('sidebar_img') | raw }}" width="98" height="98" /></li>
                    {%  endif %}
                    {% for k, tab in tabs %}
                        {% if tab.disabled is empty %}
                            <li>
                                <a class="js-form-tab-toggle" href="#tab-{{ k }}" data-toggle="tab">
                                    <span class="icon"></span>
                                    {{ tab.label }}
                                </a>
                            </li>
                        {% endif %}
                    {% endfor %}
                </ul>
                <div class="tab-content">
                    {% for k, tab in tabs %}
                        <div class="tab-pane js-main-form-tab" id="tab-{{ k }}" {% if not tab.async %} data-loaded="true" {% endif %}>
                            {% if not tab.async %}
                                {{ THIS.view(tab.view).set({validator: validator}) | raw }}
                            {% endif %}
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </form>

    <div id="fcom_append_form">
    </div>
</div>